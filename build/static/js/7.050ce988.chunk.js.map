{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","ComicsList","props","_useState","useState","_useState2","_slicedToArray","comics","setComics","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onUpdateComics","initial","then","onComicsLoaded","newComics","ended","length","concat","_jsxs","className","children","items","map","_ref","title","thumbnail","price","id","Link","to","src","alt","renderItems","disabled","style","onClick","ComicsPage","_Fragment","Helmet","name","content","AppBanner"],"mappings":"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","file":"static/js/7.050ce988.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch(process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error': \n            return <ErrorMessage/>;\n        default: \n            throw new Error('Unexpected process state');\n\n    }\n}\n\nconst ComicsList = (props) => {\n    const [comics, setComics] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onUpdateComics(offset, true);\n    }, [])\n\n\n    const onUpdateComics = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsLoaded = (newComics) => {\n        let ended = false;\n        if(newComics.length < 8) {\n            ended = true;\n        }\n\n        setComics(comics => [...comics, ...newComics]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setComicsEnded(comicsEnded => ended)\n    }\n    \n    function renderItems(arr) {\n        const items = arr.map(({title, thumbnail, price, id}) => {\n            return (\n                <li className=\"comics__item\" key={id}>\n                    <Link to={`/comics/${id}`}>\n                        <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n            \n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comics), newItemLoading)}\n            <button className=\"button button__main button__long\" \n            disabled={newItemLoading}\n            style={{'display': comicsEnded ? 'none' : 'block'}}>\n                <div className=\"inner\" onClick={() => onUpdateComics(offset)}>load more</div>\n            </button>\n        </div>\n    )\n    \n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage= () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                    />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}
{"version":3,"sources":["components/skeleton/Skeleton.js","utils/setContent.js","components/pages/SinglePage.js"],"names":["Skeleton","_jsxs","_Fragment","children","_jsx","className","setContent","process","Component","data","Spinner","ErrorMessage","Error","SinglePage","_ref","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","setData","_useMarvelService","useMarvelService","getComic","clearError","getCharacter","setProcess","useEffect","updateData","then","onDataLoaded","AppBanner"],"mappings":"oIAmBeA,EAjBE,WACb,OACIC,eAAAC,WAAA,CAAAC,SAAA,CACIC,cAAA,KAAGC,UAAU,eAAcF,SAAC,iDAC5BF,eAAA,OAAKI,UAAU,WAAUF,SAAA,CACrBF,eAAA,OAAKI,UAAU,yBAAwBF,SAAA,CACnCC,cAAA,OAAKC,UAAU,2BACfD,cAAA,OAAKC,UAAU,4BAEnBD,cAAA,OAAKC,UAAU,0BACfD,cAAA,OAAKC,UAAU,0BACfD,cAAA,OAAKC,UAAU,iCCOhBC,IAhBI,SAACC,EAASC,EAAWC,GACpC,OAAOF,GACH,IAAK,UACD,OAAOH,cAACJ,EAAQ,IACpB,IAAK,UACD,OAAOI,cAACM,IAAO,IACnB,IAAK,YACD,OAAON,cAACI,EAAS,CAACC,KAAMA,IAC5B,IAAK,QACD,OAAOL,cAACO,IAAY,IACxB,QACI,MAAM,IAAIC,MAAM,+B,qHC6BbC,UArCI,SAAHC,GAA+B,IAA1BN,EAASM,EAATN,UAAWO,EAAQD,EAARC,SACrBC,EAAMC,sBAAND,GACPE,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BT,EAAIW,EAAA,GAAEE,EAAOF,EAAA,GAEpBG,EAAkEC,cAA3DC,EAAQF,EAARE,SAAUC,EAAUH,EAAVG,WAAYC,EAAYJ,EAAZI,aAAcpB,EAAOgB,EAAPhB,QAASqB,EAAUL,EAAVK,WAEpDC,qBAAU,WACNC,MACD,CAACd,IAEJ,IAAMc,EAAa,WAIf,OAHAJ,IAGOX,GACH,IAAK,QACDU,EAAST,GAAIe,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,gBACtD,MACJ,IAAK,YACDD,EAAaX,GAAIe,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,kBAMhEI,EAAe,SAACvB,GAClBa,EAAQb,IAGZ,OACIR,eAAAC,WAAA,CAAAC,SAAA,CACIC,cAAC6B,IAAS,IACT3B,YAAWC,EAASC,EAAWC","file":"static/js/8.7446ad8d.chunk.js","sourcesContent":["import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch(process) {\r\n        case 'waiting':\r\n            return <Skeleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        case 'error': \r\n            return <ErrorMessage/>;\r\n        default: \r\n            throw new Error('Unexpected process state');\r\n\r\n    }\r\n}\r\n\r\nexport default setContent;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport setContent from '../../utils/setContent';\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n\r\n    const {getComic, clearError, getCharacter, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, [id] )\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        // eslint-disable-next-line\r\n        switch(dataType) {\r\n            case 'comic': \r\n                getComic(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n            case 'character': \r\n                getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n        }\r\n        \r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <AppBanner/>\r\n            {setContent(process, Component, data)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage;"],"sourceRoot":""}